type
	= tupleType
	| arrayType
	| pointerType
	| functionType
	| mutType
	| basicType

tupleType
	= "(" *(type ",") *type ")"

arrayType
	= "[" ?expression "]" ?type

pointerType
	= "&" ?type

functionType
	= "func" ?functionParameterList ?type

mutType
	= "mut" type

basicType
	= identifier *("." identifier) *genericArguments

genericArguments
	= "generic <" *(genericArgument ",") ?genericArgument ">"

genericArgument
	= type
	| expression
